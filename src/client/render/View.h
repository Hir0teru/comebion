// Generated by dia2code
#ifndef RENDER__VIEW__H
#define RENDER__VIEW__H

#include <memory>
#include <SFML/Graphics.hpp>
#include <mutex>

namespace render {
  class Rendu;
};
namespace state {
  class GameState;
};
namespace engine {
  class Moteur;
}

#include "Rendu.h"
#include "state/GameState.h"
#include "engine/Moteur.h"

namespace render {

  /// class View - 
  class View {
    // Associations
    // Attributes
  private:
    std::unique_ptr<Rendu> rendu;
    std::shared_ptr<state::GameState> gameState;
    sf::RenderWindow window;
    std::shared_ptr<engine::Moteur> moteur;
    // Operations
  public:
    View ();
    View (std::shared_ptr<state::GameState>& gameState, std::shared_ptr<engine::Moteur> moteur);
    ~View ();
    std::unique_ptr<Rendu>& GetRendu ();
    std::shared_ptr<state::GameState>& GetGameState ();
    sf::RenderWindow& GetWindow ();
    void Draw (std::mutex* mtx, bool* pause, bool* run);
    // Setters and Getters
  };

};

#endif
