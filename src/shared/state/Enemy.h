// Generated by dia2code
#ifndef STATE__ENEMY__H
#define STATE__ENEMY__H

#include <vector>
#include <memory>

namespace state {
  class EnemySkill;
  class Card;
  class Entity;
}

#include "EnemySkill.h"
#include "Card.h"
#include "Entity.h"

namespace state {

  /// class Enemy - 
  class Enemy : public state::Entity {
    // Associations
    // Attributes
  public:
    std::vector<std::shared_ptr<Card>> Reward;
    std::vector<std::shared_ptr<EnemySkill>> skills;
    std::shared_ptr<EnemySkill> intent;
    // Operations
  public:
    Enemy ();
    std::vector<std::shared_ptr<EnemySkill>> GetSkills ();
    void SetSkills (std::vector<std::shared_ptr<EnemySkill>> );
    std::shared_ptr<EnemySkill> GetIntent ();
    void SetIntent (std::shared_ptr<EnemySkill> );
    std::vector<std::shared_ptr<Card>> GetReward ();
    void SetReward (std::vector<std::shared_ptr<Card>> newReward);
    // Setters and Getters
  };

};

#endif
